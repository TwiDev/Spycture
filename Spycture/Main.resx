<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>203, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAACMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACEAAABXAAAAWAAAAFgAAABYAAAAWAAAAFgAAAAjAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADcGDQ/LBg0OyQAA
        ADUAAAAAAAAAAAAAAAAAAAAAAAAAPgAAAJ4AAACeAAAAngAAAJ4AAACeAAAAngAAAEAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGCxkc2T6N
        mv89ipf/Chga1wAAAEQBAwMAAAAAAAAAAAAAAAAdAAAATwAAAFAAAABQAAAAUAAAAFAAAABQAAAAHwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAVw8h
        JORFnav/ZOL3/2Ti9v9Emqj/DiAj4gAAAFQAAAACAAAAAAAAAD4AAAChAAAAowAAAKMAAACjAAAAowAA
        AKIAAABBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAA
        AGkSKCztS6q6/2Ti+P9j4PX/Y+D1/2Ti+P9Kp7f/ESYq6wAAAGYAAAADAAAAGQsZGyBTu80ISaW1CUml
        tQlTvM4IDBodHwAAABsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABPAAAA6xAkKPxHorH/ZOP4/2Pg9f9j4PX/ZOP4/0afrv8PIib8AAAA6QAAAEcAAABtLWZv1WXl
        +rhj4PW5Y+D1uWXl+rgvaXPVAAAAdQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABoAAAA+AAAAnTV4g/9l5Pn/Y+D1/2Pg9f9k4/n/M3R//wAAAJoAAAA9AAAAFAAA
        AHczdH//ZOP5/2Pg9f9j4PX/ZeT5/zV4g/8AAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8NXiD/2Xk+f9j4PX/Y+D1/2Tj+f8zdH//AAAAeAAA
        AAABAQEAAAAAezN0f/9k4/n/Y+D1/2Pg9f9l5Pn/NXiD/wAAAH4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAA+AQAAewAAAMw1eYT/ZeT5/2Pg9f9j4PX/ZOP5/zR1
        gP8EAQDXDAkDsgwJA7IEAQDXNHWA/2Tj+f9j4PX/Y+D1/2Xk+f81eYT/AwEA1wYEAqAAAAB1AAAAMAAA
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3CwgDrT4tEfKAXST/UDgU/zR4hP9l5Pn/Y+D1/2Pg
        9f9k4/n/MnSA/11CF/+1gzL/tYMy/11CF/8ydID/ZOP5/2Pg9f9j4PX/ZeT5/zN3hP9ZPxb/pHYt/3FS
        H/8sIAzpAwIBiwAAABgAAAAAAAAAAAAAAAAAAAAAAAAAVCccC+GWbSr/5KVA//m0R/99WiP/MneE/2Xk
        +f9j4PX/Y+D1/2Tj+f8xc3//gV4n//q5Uf/6uVH/gV4n/zFzf/9k4/n/Y+D1/2Pg9f9l5Pn/MneD/35b
        Jv/7uVH/9bRN/9WcQP9nSx3+CwgDswAAABsAAAAAAAAAAAAAAEMrHwzlu4c0//ayRf/0tE7/97xe/3xe
        MP8yd4P/ZeT5/2Pg9f9j4PX/ZOP5/zFzf/+BYzT/+sNq//3FbP+DZDX/MXN//2Tj+f9j4PX/Y+D1/2Xk
        +f8yd4P/f2E0//3FbP/3v2j/975k/+60V/9wUyX/BAMBmwAAAAkAAAAXEg0FwaZ4Lv/2skf/9LdX//W+
        Z//5wmv/fV8z/zF3hP9j5fv/YeH3/2Hh9/9i5Pv/MHOA/4JjNf/frmD/t49O/15IJv8ydH//ZOP5/2Pg
        9f9j4PX/ZeT5/zN3g/9bRiX/to5O/9uqXv/2wGr/98Bq/+OwXv9AMRryAAAAVAAAAGxYQBn57qxE//S4
        WP/1v2n/9b9p//jCav+FZjf/Unhx/4/a0P+N183/jdfN/4/a0P9PdW7/jGw6/7KLTP8VEAn/ESUn/0eh
        sP9k4/j/Y+D1/2Pg9f9k4/j/SKOy/xImKf8UDwj/q4VJ//jBav/1v2n/+cJr/5Z1QP8EAwKzCAYCv6N2
        Lf/3t1L/9b5o//W/af/1v2n/9sBp/9yrXv/Zql//771q/+68av/uvGr/771q/9iqX//drF//871o/5d1
        QP8jMi7/R6W2/2Ti9/9j4PX/Y+D1/2Ti+P9IqLj/IjMw/5RzPv/xvGf/9b9p//W/af/4wWr/yp5X/xsV
        C+odFQjtzJQ7//e9Yf/1v2r/9b9p//W/af/3wWr/tY1N/1ZDJf9UQiT/VEIk/1RCJP9UQiT/VkMl/7eP
        T//4wWr/9sBq/6eBRf8pMSn/QZen/2Th9v9k4vf/Qpqp/ygxKv+lf0T/9sBp//a/af/1v2n/9b9p//fA
        av/bq17/KSAR/CkeC/3aoUb/9r9o//W/af/1v2n/9b9p//bAaf/ZqV3/rYZK/6yGSv+shkr/rIZK/6yG
        Sv+th0r/26pe//bAaf/1v2n/98Fq/7aNTP8wMSX/OYeV/zqJl/8uMSX/tItL//fBav/1v2n/9b9p//W/
        af/1v2n/98Fq/9SmW/8iGw/0JxwK+tiiTP/3wGr/9b9p//W/af/1v2n/98Fq/7WNTf9YRCb/WEQm/1hE
        Jv9YRCb/WEQm/1hEJv+3j0//+MFq//W/af/1v2n/+MFq/8SYU/85MiD/NzEf/8KWUv/4wWr/9b9p//W/
        af/1v2n/9b9p//W/af/5wmv/tIxN/w4LBtEUDgXdv5FI//jBav/1v2n/9b9p//W/af/2wGn/2qpe/7CJ
        TP+wiUz/sIlM/7CJTP+wiUz/sYlM/9urXv/2wGn/9b9p//W/af/1v2n/98Fq/9qpXf/ZqVz/98Fq//W/
        af/1v2n/9b9p//W/af/1v2n/9b9p//W/af9sVC79AAAAhQAAAJuCZTX/+MFq//W/af/1v2n/9b9p//W/
        af/3wGr/+cJr//nCa//5wmv/+cJr//nCa//5wmv/9sBq//W/af/1v2n/9b9p//W/af/1v2n/98Bq//fA
        av/1v2n/9b9p//W/af/1v2n/9b9p//W/af/5wmv/t45O/xoVC9IAAAAmAAAAPjAlFefYqFz/98Fq//W/
        af/1v2n/9b9p//W/af/1v2n/9b9p//W/af/1v2n/9b9p//W/af/1v2n/9b9p//W/af/1v2n/9b9p//W/
        af/1v2n/9b9p//W/af/1v2n/9b9p//W/af/3wWr/+MFq/7+UUv8xJhXtAAAAVQEBAQAAAAADAAAAhmNN
        Kv7suGX/98Fq//W/af/1v2n/9b9p//W/af/1v2n/9b9p//W/af/1v2n/9b9p//W/af/1v2n/9b9p//W/
        af/1v2n/9b9p//W/af/1v2n/77pn/+y4Zf/xvGf/7Lhl/9GjWf+EZjj/IhsP4QAAAFwAAAACAAAAAAAA
        AAAAAAATCAYDqWhRLP7grmD/+cJr//fAav/1v2n/9b9p//W/af/1v2n/9b9p//W/af/1v2n/9b9p//W/
        af/1v2n/9b9p//W/af/1v2n/9b9p//jBav+Tcz//PjAa+k8+IvdCNBzyIRoO2AQDApQAAAAwAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAWBAMCkzwvGvKbeUL/16hc/+25Zf/yvGj/9b9p//W/af/1v2n/9b9p//W/
        af/1v2n/9b9p//W/af/1v2n/9b9p//W/af/1v2n/+cJr/35iNv8AAACaAAAAQQAAADgAAAAaAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAASAgGA6cnHhHfRTUd8049IfqkgEb/98Fq//W/
        af/1v2n/9b9p//W/af/1v2n/9b9p//W/af/1v2n/9b9p//W/af/4wWr/d10z/wAAAG8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAB8AAAA3AAAAd1ZD
        JfnyvWj/9b9p//W/af/1v2n/9b9p//W/af/1v2n/9b9p//W/af/1v2n/9b9p//G8Z/9SQCP5AAAATQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAcIBkO1sqeV//4wWr/9b9p//W/af/1v2n/9b9p//W/af/1v2n/9b9p//W/af/4wWr/yJxW/x4X
        DdUAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABQQCQAAAAB4YUsp/e66Zv/2wGr/9b9p//W/af/1v2n/9b9p//W/af/1v2n/9sBp/+65
        Zv9fSin9AAAAeBAMBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMKCASweF40/+u3Zf/5wmv/9sBp//W/af/1v2n/9sBp//jB
        av/xvGf/e2A1/wkHBLAAAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4JBwSqUD4i+rOMTf/ksWL/8bxn//G8
        Z//isGH/0KJZ/eCuYMMsIhOCAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAABkEQ0HvjUp
        F+lPPiL2Tj0i9jQoFuojGw+thmg5HUM0HQD1v2kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAOAAAAMwAAAE4AAABOAAAANAAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8+Af/+HgH//A4B//ACAf/gAAH/4AAB/+AAAf/4BgH/wAAAH4AAAA8AA
        AAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAYAAAAPAAAAP4AAA//gA
        AP//AAD//4AB//+AAf//wAP//+AP///4H/8=
</value>
  </data>
</root>